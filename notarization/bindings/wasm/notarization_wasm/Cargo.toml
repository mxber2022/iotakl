[package]
name = "notarization_wasm"
version = "0.1.2-alpha"
authors = ["IOTA Stiftung"]
edition = "2021"
homepage = "https://www.iota.org"
keywords = ["iota", "tangle", "notarization", "wasm"]
license = "Apache-2.0"
publish = false
readme = "README.md"
repository = "https://github.com/iotaledger/notarization.rs"
resolver = "2"
description = "Web Assembly bindings for the notarization crate."

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
anyhow = "1.0.95"
async-trait = { version = "0.1", default-features = false }
bcs = "0.1.6"
console_error_panic_hook = { version = "0.1" }
fastcrypto = { git = "https://github.com/MystenLabs/fastcrypto", rev = "2f502fd8570fe4e9cff36eea5bbd6fef22002898", package = "fastcrypto" }
iota_interaction = { git = "https://github.com/iotaledger/product-core.git", tag = "v0.7.0", package = "iota_interaction", default-features = false }
iota_interaction_ts = { git = "https://github.com/iotaledger/product-core.git", tag = "v0.7.0", package = "iota_interaction_ts" }
js-sys = { version = "0.3.61" }
prefix-hex = { version = "0.7", default-features = false }
serde = { version = "1.0", features = ["derive"] }
serde-wasm-bindgen = "0.6.5"
serde_json = { version = "1.0", default-features = false }
serde_repr = { version = "0.1", default-features = false }
# Want to use the nice API of tokio::sync::RwLock for now even though we can't use threads.
tokio = { version = "1.44.2", default-features = false, features = ["sync"] }
tsify = "0.4.5"
wasm-bindgen = { version = "0.2.100", features = ["serde-serialize"] }
wasm-bindgen-futures = { version = "0.4", default-features = false }

[dependencies.product_common]
git = "https://github.com/iotaledger/product-core.git"
tag = "v0.7.0"
package = "product_common"
features = ["core-client", "transaction", "bindings", "binding-utils", "gas-station", "default-http-client"]

[dependencies.notarization]
path = "../../../notarization-rs"
default-features = false
features = ["gas-station", "default-http-client"]

[target.'cfg(all(target_arch = "wasm32", not(target_os = "wasi")))'.dependencies]
getrandom = { version = "0.3", default-features = false, features = ["wasm_js"] }

[profile.release]
opt-level = 's'
lto = true
# Enabling debug for profile.release may lead to more helpful logged call stacks.
# TODO: Clarify if 'debug = true' facilitates error analysis via console logs.
#       If not, remove the next line
#       If yes, describe the helping effect in the comment above
# debug = true

[lints.clippy]
# can be removed as soon as fix has been added to clippy
# see https://github.com/rust-lang/rust-clippy/issues/12377
empty_docs = "allow"

[lints.rust]
# required for current wasm_bindgen version
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(wasm_bindgen_unstable_test_coverage)'] }
